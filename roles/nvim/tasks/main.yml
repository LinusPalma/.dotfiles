---
#-----------------#
#  install nvim   #
#-----------------#

- name: Install nvim (Arch)
  package:
    name: neovim
    state: present
  become: yes
  tags: [server, client]
  when: ansible_distribution in ["Archlinux"]

  # TODO: community module for copr
- name: Install nvim (Fedora)
  ansible.builtin.dnf:
    name:
      - neovim
      - python3-neovim
    state: present
    use_backend: dnf4
  become: yes
  tags: [server, client]
  when: ansible_distribution == "Fedora"

# - name: Install nvim (Fedora)
# command: sudo dnf install -y neovim python3-neovim
# args:
# creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org
# become: yes
# tags: [server, client]
# when: ansible_distribution in ["Fedora"]
# - name: Add Neovim PPA (Ubunut)
#   ansible.builtin.apt_repository:
#     repo: ppa:neovim-ppa/unstable
#     state: present
#   tags: [server, client]
#   when: ansible_distribution == "Ubuntu"

# - name: Install Neovim from PPA (Ubuntu)
#   ansible.builtin.apt:
#     name: neovim
#     state: present
#     update_cache: yes
#   tags: [server, client]
#   when: ansible_distribution == "Ubuntu"
- name: Install Neovim via snap (Ubuntu)
  ansible.builtin.command:
    cmd: snap install nvim --classic
    creates: /snap/bin/nvim
  become: yes
  tags: [server, client]
  when: ansible_distribution == "Ubuntu"

#----------------------------------------#
#   Install Node + NPM (dependencies)    #
#----------------------------------------#

- name: Install Node + NPM
  package:
    name:
      - nodejs
      - npm
      - unzip
      - python3.12-venv # only in Ubunut / Debian!
    state: present
  become: yes
  tags: [server, client]
  when: ansible_distribution in ["Ubuntu", "Debian"]
#--------------------------------------#
#   Install Treesitter dependencies    #
#--------------------------------------#
#TODO: add for Arch, debian, fedora
- name: Install Treesitter deps (Ubuntu)
  package:
    name:
      - build-essential
      - gcc
      - git
    state: present
  become: yes
  tags: [server, client]
  when: ansible_distribution == "Ubuntu"

#---------------------------------------#
#   Install fd (depencencie telescope   #
#---------------------------------------#

- name: install fd (Arch)
  package:
    name: fd
    state: present
  become: yes
  tags: [server, client]
  when: ansible_distribution in ["Archlinux"]

- name: install fd (Ubuntu)
  package:
    name: fd-find
    state: present
  become: yes
  tags: [server, client]
  when: ansible_distribution in ["Ubuntu"]

- name: install fd (Fedora)
  ansible.builtin.dnf:
    name:
      - fd-find
      - unzip
    state: present
    use_backend: dnf4
  become: yes
  tags: [server, client]
  when: ansible_distribution == "Fedora"

#-----------------------------#
#   create config directory   #
#-----------------------------#

- name: Create nvim config directory
  file:
    path: "/home/{{ target_user | default(ansible_user_id) }}/.config/nvim"
    state: directory
  become: yes
  become_user: "{{ target_user | default(ansible_user_id)}}"
  tags: [server, client]

#------------------------#
#   Symlinking configs   #
#------------------------#

- name: Symlink nvim Config for clients
  file:
    src: "/home/{{ target_user | default(ansible_user_id) }}/.dotfiles/roles/nvim/files"
    dest: "/home/{{ target_user | default(ansible_user_id) }}/.config/nvim"
    state: link
    force: yes
#  become: yes
  become_user: "{{ target_user | default(ansible_user_id)}}"
  tags: [client]

#------------------#
#   copy configs   #
#------------------#

- name: Copy nvim config directory for servers
  #  file:
  copy:
    src: ./
    dest: "/home/{{ target_user | default(ansible_user_id) }}/.config/nvim"
    #  state: link
    force: yes
  become: yes
  become_user: "{{ target_user | default(ansible_user_id) }}"
  tags: [server]
